apiVersion: v1
kind: Service
metadata:
  name: my-nginx-secure
  labels:
    run: my-nginx-secure
spec:
  type: NodePort
  ports:
  - port: 80
#    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    protocol: TCP
    name: https
  selector:
    run: my-nginx-secure
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx-secure
spec:
  selector:
    matchLabels:
      run: my-nginx-secure
  replicas: 5 
  template:
    metadata:
      labels:
        run: my-nginx-secure
#      annotations:
#        sidecar.istio.io/inject: "false"
    spec:
      volumes:
      - name: secret-volume
        secret:
          secretName: nginxsecret
      - name: configmap-volume
        configMap:
          name: nginxconfigmap
      containers:
      - name: nginx
        image: nginx:latest 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 443
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginxconfig-volume
        - mountPath: /etc/nginx/ssl
          name: nginxsecret-volume
      volumes:
      - name: nginxconfig-volume
        persistentVolumeClaim:
          claimName: pvc-nginxconfig
      - name: nginxsecret-volume
        persistentVolumeClaim:
          claimName: pvc-nginxsecret
